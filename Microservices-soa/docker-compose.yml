---
version: '3'
services:
  discovery-server:
    image: discoveryserver-dockerfinal
    container_name: discovery-server
    ports:
      - "8761:8761"

  api-gateway:
    image: apigateway-dockerfinal
    container_name: api-gateway
    ports:
      - "8090:8090"
    environment:
      - eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka
    depends_on:
      - discovery-server

  inventory-service:
    container_name: inventory-service
    image: inventoryservice-dockerfinal
    environment:
      - spring.datasource.url=jdbc:mysql://db:3306/soa
      - eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka
    depends_on:
      - db
      - discovery-server
      - api-gateway

  order-service:
    container_name: order-service
    image: orderservice-dockerfinal
    environment:
      - spring.datasource.url=jdbc:mysql://db:3306/soa
      - eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka
    depends_on:
      - db
      - discovery-server
      - api-gateway

  notification-service:
    container_name: notification-service
    image: notificationservice-dockerfinal
    environment:
      - eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka
    depends_on:
      - db
      - broker
      - discovery-server
      - api-gateway

  product-service:
    container_name: product-service
    image: productservice-dockerfinal
    environment:
      - eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka
      - spring.data.mongodb.uri=mongodb://localhost:27017/product-service
    depends_on:
      - mongodb_container
      - discovery-server
      - api-gateway

  mongodb_container:
    image: mongo:6.0.4
    environment:
      MONGO_INITDB_ROOT_USERNAME:
      MONGO_INITDB_ROOT_PASSWORD:
    ports:
      - 27017:27017
  ## MySQL Docker Compose Config
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'soa'
      MYSQL_PASSWORD: '1234'
      MYSQL_ROOT_PASSWORD: '1234'


  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1